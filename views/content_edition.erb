<%= include('entity-management') %>

<!-- Renders the element description -->
<script type="text/tmpl" id="elements_title">
  <h2 class="entity-title"><%=title%></h2>
</script>

<!-- Renders the element description -->
<script type="text/tmpl" id="elements_description">
 <%= description %>
</script>

<!-- Renders the elements container -->
<script type="text/tmpl" id="elements_container_template">

</script>

<!-- Renders one element in the elements list view -->
        
<script type="text/tmpl" id="elements_list_template">

</script>

<!-- Renders one element in the element view (full detailed) -->

<script type="text/tmpl" id="element_template">

     <div class="element_template" style="overflow:hidden">
       <div class="entity-field"><span class="content-type-fieldvalue entity-fieldvalue"><%%= entity.type.charAt(0).toUpperCase() + entity.type.slice(1) %></span></div>
       <div class="entity-field"><span class="entity-fieldlabel">Title</span> <span class="entity-fieldvalue"><a href="<%%='/content/'+entity.key%>" target="_blank"><%%=entity.title %></a></span> </div>
       <%%if (entity.categories_info && entity.categories_info.length > 0) {%>
       <div class="entity-field"><span class="entity-fieldlabel">Categories/Tags</span> <span class="entity-fieldvalue"><%%= self.model.entityHooks[0].formatCategories(entity) %></span></div>
       <%%}%>
       
       <div id="template_above">
         <%= element_template_above %>
       </div>

       <div class="entity-field">
         <div id="tabs_template_above" style="display:none">
           <ul>
             <%= element_template_above_ingroup_tab %>
           </ul>      
           <%= element_template_above_ingroup %>
         </div>
       </div>

       <div class="entity-field">
         <span class="entity-fieldlabel">Body</span>
         <span class="entity-fieldvalue more-block">
           <div class="more-less">
             <div class="more-block">
               <%%=entity.body%>
             </div>
           </div>
         </span>
       </div>

       <div class="entity-field">
         
         <div id="template_below">
            <%= element_template %>
         </div>

         <div id="tabs_template">
           <ul>
             <%= element_template_ingroup_tab %>
           </ul>      
           <%= element_template_ingroup %>         
        </div>
      </div>             

      <% if element_action.strip.length > 0 %>
      <div class="element_template_actions">
        <div class="element_template_actions_buttons">
          <%= element_action %>
        </div>
      </div>
      <% end %>

   </div>
   
</script>

<!-- Renders the form to edit an element -->

<script type="text/tmpl" id="element_template_form">
              
     <form name="element" method="POST">
        
        <div class="form-fields">
        
          <%% if (entity) { %>
          <input type="hidden" id="key" name="key" value="<%%=entity.key%>"/>
          <%% } %>

          <input type="hidden" id="type" name="type" value="<%= content_type %>"/>
                
          <div class="formrow">
            <label for="title" class="fieldtitle">Title <span class="mandatoryfield">*</span></label>
            <input type="text" maxlength="120" id="title" name="title" class="fieldcontrol" <%% if (entity) {%> value="<%%=entity.title %>" <%% } %>/>
            <div class="fielddescription">The content title.</div>
          </div>
          
          <%% if (entity) { %>
            <div id="form_above">
               <%= edit_element_form_above %>
            </div>
            <div id="tabs_above" style="display:none">
              <ul>
                <%= render_tab('content_body', t.content_management.form.content.label) %>
                <%= render_tab('content_categories', t.content_management.form.categories.label) %>
                <%= edit_element_form_above_ingroup_tab %>
              </ul>          
              <div id="content_body" class="formrow">
                <div class="formrow">
                  <textarea rows="20" cols="50" id="body" name="body" class="fieldcontrol texteditor"><%% if (entity) {%><%%=entity.body %><%% } %></textarea>
                </div>
              </div>
              <div id="content_categories" class="formrow">
                <div id="content_taxonomies" class="formrow" style="display:none">
                  <div class="entity-block fieldcontrol" id="taxonomies">            
                  </div>
                  <div class="fielddescription"><%= t.content_management.form.categories.description %></div>
                </div>
              </div>                            
              <%= edit_element_form_above_ingroup %>
            </div>
          <%% } else { %>
            <div id="form_above">
               <%= new_element_form_above %>
            </div>
            <div id="tabs_above" style="display:none">
              <ul>
                <%= render_tab('content_body', t.content_management.form.content.label) %>
                <%= render_tab('content_categories', t.content_management.form.categories.label) %>
                <%= new_element_form_above_ingroup_tab %>
              </ul>          
              <div id="content_body">
                <div class="formrow">
                  <textarea rows="20" cols="50" id="body" name="body" class="fieldcontrol texteditor"><%% if (entity) {%><%%=entity.body %><%% } %></textarea>
                </div>
              </div>
              <div id="content_categories">
                <div id="content_taxonomies" class="formrow" style="display:none">
                  <div class="entity-block fieldcontrol" id="taxonomies">            
                  </div>
                  <div class="fielddescription"><%= t.content_management.form.categories.description %></div>
                </div>
              </div>                           
              <%= new_element_form_above_ingroup %>
            </div>          
          <%% } %>  
          
          <%% if (entity) { %>     
            <div id="form_below">
              <%= edit_element_form %>
            </div>
            <a id="show_tabs" href="#" style="display:none"><%= t.content_management.form.show_tabs %></a>
            <div id="tabs" style="display:none">
              <ul>
                <%= edit_element_form_ingroup_tab %>
              </ul>
              <%= edit_element_form_ingroup %>
            </div>          
          <%% } else { %>
            <div id="form_below">
              <%= new_element_form %>
            </div>
            <a id="show_tabs" href="#" style="display:none"><%= t.content_management.form.show_tabs %></a>
            <div id="tabs" style="display:none">
              <ul>
                <%= new_element_form_ingroup_tab %>
              </ul>
              <%= new_element_form_ingroup %>
            </div>  
          <%% } %> 
                        
        </div>
                       
        <div class="bottom-navigation-bar navigation-bar">
             <div class="navigation-bar-nav-buttons">
                <%% if (entity) { %>
                  <%% if (self.model.configuration.search_params['destination']) { %>
                    <input type="button" class="cancel-entity-button action-button entity-management-button" value="<%=t.entitymanagement.back%>"/>
                  <%% } %>
                  <input type="button" class="update-entity-button action-button entity-management-button" value="<%=t.entitymanagement.update%>"/>
                <%% } 
                   else { %>
                  <% if defined?(creation_buttons)
                      creation_buttons.each do |button| %>  
                    <input type="button" class="create-entity-button action-button entity-management-button" value="<%=button[:text]%>" class="<%=button[:class]%>" data-create-url="<%=button[:url]%>"/>
                  <%  end 
                     end %>
                <%% } %>
             </div>
        </div>
     
     </form>
     

</script>

<%= element_form_extension %>
<%= element_extension %>
<%= element_action_extension %>

<script type="text/javascript">

// jquery
// tabs => jquery.ui

require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks", "YSDRemoteDataSource", "YSDHierachyListAdapter", "YSDSelectHierarchicalSelector","postPublishing", "jquery.ui", "YSDjson2"], function($, EntityManagement, EntityManagementComplementHooks, YSDRemoteDataSource, YSDHierachyListAdapter, YSDSelectHierarchicalSelector, postPublishing) {
  	
  var contentsHook = {
 	   
 	  entity: null,
    publishingStates: JSON.parse('<%=publishing_states%>'),
    publishingActions: JSON.parse('<%=publishing_actions%>'),   
 	   
    entityKey : function(entity) {
      return entity.key;
    },

    onEdit : function(entity) {
      this.entity = entity;
      $('#title').focus();
      this.configForm(); 
      this.buildCategories(entity.type); 	              
    },
  
    onNew : function() {
      this.entity = null;
  	  $('#title').focus();
  	  this.configForm();
  	  this.buildCategories('<%=content_type%>');
    },
    
    onCreate: function(data) { /* onCreate hook */
      
      var publishingAction  = this.publishingActions[data.publishing_state];
      
      if (publishingAction) {
        var command = postPublishing(publishingAction.action, publishingAction.url_prefix + data.key);
        if (command) {
          command.execute();
        }
      }

    },

    onRenderEntities : function(entities) {
    
      $('.new-entity-button').hide();
      $('.edit-entity-button').hide();
      $('.page-navigation').hide();
      	
    },    
    
    onRender : function(entity) {
      this.entity = entity;
      $('.new-entity-button').hide();
      $('.page-navigation').hide();
      $('.navigation-bar-nav-buttons').hide();
      
      $('#tabs_template_above').tabs().addClass("ui-tabs-vertical ui-helper-clearfix");
      $('#tabs_template_above li').removeClass("ui-corner-top").addClass("ui-corner-left");
  	  $('#tabs_template').tabs();

  	  this.configureMoreLessBody();

      if ($('#tabs_template_above ul').children().length) {
        $('#tabs_template_above').show();
      }

      if ($('#tabs_template ul').children().length) {
        $('#tabs_template').show();
      }

    },
  	
  	adaptFormData : function(data) {
  	
  	  var send = {};
  	  
  	  for (idx in data) {
  	    if (idx != 'categories_info') {
  	      send[idx] = data[idx]	
  	    }
  	  }
  	  
  	  var categories = [];  	  
  	  for (idx in data.categories_by_taxonomy) {
  	    var category = data.categories_by_taxonomy[idx];
  	    for (idx_category in category) {
  	      category[idx_category] = new Number(category[idx_category]).valueOf();	
  	      categories.push(category[idx_category]);   	
  	    }  	    	
  	  }
  	  
  	  send.categories = categories;

  	  return send;
  		
  	},
    
    /* ------- Internal function --------- */
    
    configForm : function() {

      $('#tabs_above').tabs().addClass( "ui-tabs-vertical ui-helper-clearfix" );
      $( "#tabs_above li" ).removeClass( "ui-corner-top" ).addClass( "ui-corner-left" );

      $('#tabs').tabs();

      if ($('#tabs_above ul').children().length) {
        $('#tabs_above').show();
      }

      if ($('#tabs ul').children().length) {
        $('#show_tabs').show();
        $('#show_tabs').toggle(function() {
           $('#tabs').show();
        }, function() {
           $('#tabs').hide();
        });
      }
      
    },
  	  
    configureMoreLessBody : function() {

      // The height of the content block when it's not expanded
      var adjustheight = 90; 
      // The "more" link text
      var moreText = "+  More";
      // The "less" link text
      var lessText = "- Less";

      // Sets the .more-block div to the specified height and hides any content that overflows
      $(".more-less .more-block").css('height', adjustheight).css('overflow', 'hidden');

      // The section added to the bottom of the "more-less" div
      $(".more-less").append('<p class="continued">[&hellip;]</p><a href="#" class="adjust"></a>');

      // Set the "More" text
      $("a.adjust").text(moreText);

      $(".adjust").toggle(function() {
         $(this).parents("div:first").find(".more-block").css('height', 'auto').css('overflow', 'visible');
         // Hide the [...] when expanded
         $(this).parents("div:first").find("p.continued").css('display', 'none');
         $(this).text(lessText);
      }, function() {
         $(this).parents("div:first").find(".more-block").css('height', adjustheight).css('overflow', 'hidden');
         $(this).parents("div:first").find("p.continued").css('display', 'block');
         $(this).text(moreText);
      });

    },

  	buildCategories : function(contentType) {
  	
      var taxonomies = document.getElementById('taxonomies');
      while (taxonomies.hasChildNodes())
      {
  	    taxonomies.removeChild(taxonomies.firstChild);	
      }
  	
	    var self = this;
  	  
  	  $.getJSON('/taxonomy-content-type/'+contentType,
  	        function success_handler(data) {
  	        	
  	          if (data.length == 0) {
  	            $('#content_taxonomies').hide();	
  	          }
  	          else {
  	            for (idx in data) {
  	              self.buildCategory(data[idx].taxonomy_id);       	
  	            }
  	          	$('#content_taxonomies').show();
  	          }	

  	        });
  		
  	},
  	
  	buildCategory : function(taxonomy_id) {
  	  
  	  var selectName = 'categories_by_taxonomy['+taxonomy_id+'][]';      
      var container = document.getElementById('taxonomies');
      
      var select = document.createElement('select');
      select.setAttribute('id',selectName);
      select.setAttribute('name', selectName);
      select.setAttribute('class', 'fieldcontrol');
      select.setAttribute('size', 10);
      select.setAttribute('multiple', true);
      container.appendChild(select);
      
      var dataSource = new YSDRemoteDataSource('/terms/'+taxonomy_id,null,[YSDHierachyListAdapter]);
      var value = null;
      if (this.entity && this.entity.categories_by_taxonomy && this.entity.categories_by_taxonomy[taxonomy_id]) {
        value = this.entity.categories_by_taxonomy[taxonomy_id]; 
      }
      var termsSelect = new YSDSelectHierarchicalSelector(selectName, dataSource, value, true);
  	  
  	},
  	
  	formatCategories : function(entity) {
  	    	
      var categories = [];
      for (index in entity.categories_info) { 
         categories.push('<span class="category">'+entity.categories_info[index].description+'</span>');
      }	    	
      
      return categories;	
  		
  	},

    formatPublishingState: function(entity) {
     
      var text='';
      if (entity) {
        text= this.publishingStates[entity.publishing_state];
      }

      return text;

    }

  };

  var urls = { query_url  : '/contents',
    	       create_url : '/content',
  	           update_url : '/content',
  	           delete_url : '/content',
  	           get_url    : '/content'
  	         };
  
  var hooks = [contentsHook];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
     	           
  var contentsManager = new EntityManagement(urls, 'content', <%=settings.contents_page_size%>, hooks,
                                             {url_base: '<%= url_base %>', action: '<%= action %>', id: '<%= id %>', hold_form_after_action: ('<%=action%>' == 'edit')});
  
});
  
</script>
