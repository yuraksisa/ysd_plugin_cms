<%= include('entity-management', {:element_action => element_action}) %>

<!-- Renders the element description -->
<script type="text/tmpl" id="elements_title">
  <h2 class="entity-title"><%=title%></h2> 
</script>

<!-- Renders the element description -->
<script type="text/tmpl" id="elements_description">
 <%= description %>
</script>

<!-- Renders the elements container -->
<script type="text/tmpl" id="elements_container_template">

</script>

<!-- Renders one element in the elements list view -->
        
<script type="text/tmpl" id="elements_list_template">

</script>

<!-- Renders one element in the element view (full detailed) -->

<script type="text/tmpl" id="element_template">
   
</script>

<!-- Renders the form to edit an element -->

<script type="text/tmpl" id="element_template_form">
              
     <form name="element" method="POST">
        
        <div class="form-fields">
        
          <%% if (entity) { %>
          <input type="hidden" id="key" name="key" value="<%%=entity.key%>"/>
          <%% } %>

          <input type="hidden" id="type" name="type" value="<%= content_type %>"/>
                
          <div class="formrow">
            <label for="title" class="fieldtitle"><%= t.content_management.form.title.label %> <span class="mandatoryfield">*</span></label>
            <input type="text" maxlength="120" id="title" name="title" class="fieldcontrol" <%% if (entity) {%> value="<%%=entity.title %>" <%% } %>/>
            <div class="fielddescription"><%= t.content_management.form.title.description %></div>
          </div>
              
          <div id="content_taxonomies" class="formrow" style="display:none">
             <label class="fieldtitle"><%= t.content_management.form.categories.label %></label>
             <div class="entity-block fieldcontrol" id="taxonomies">            
             </div>
             <div class="fielddescription">
               <%= t.content_management.form.categories.description %>
             </div>
          </div>

          <%= include('entity-tabs-above', {:edit_element_form_above => edit_element_form_above,
                                            :edit_element_form_above_ingroup_tab => edit_element_form_above_ingroup_tab,
                                            :edit_element_form_above_ingroup => edit_element_form_above_ingroup,
                                            :new_element_form_above => new_element_form_above,
                                            :new_element_form_above_ingroup_tab => new_element_form_above_ingroup_tab,
                                            :new_element_form_above_ingroup => new_element_form_above_ingroup}) %>          
           
          <div id="content_body" class="formrow">
              <label for="body" class="fieldtitle"><%= t.content_management.form.body.label %> <span class="mandatoryfield">*</span></label>
              <div class="formrow">
                <textarea rows="20" cols="50" id="body" name="body" class="fieldcontrol texteditor"><%% if (entity) {%><%%=entity.body %><%% } %></textarea>
              </div>
              <div class="fielddescription"><%= t.content_management.form.body.description %></div>
          </div>

          <%= include('entity-tabs-below', {:edit_element_form => edit_element_form,
                                            :edit_element_form_ingroup_tab => edit_element_form_ingroup_tab,
                                            :edit_element_form_ingroup => edit_element_form_ingroup,
                                            :new_element_form => new_element_form,
                                            :new_element_form_ingroup_tab => new_element_form_ingroup_tab,
                                            :new_element_form_ingroup => new_element_form_ingroup}) %>
                        
        </div>
                       
        <div class="bottom-navigation-bar navigation-bar">
             <div class="form-crud-buttons">
                <%% if (entity) { %>
                  <input type="button" class="update-entity-button action-button entity-management-button" value="<%=t.entitymanagement.update%>"/>
                <%% } 
                   else { %>
                  <% if defined?(creation_buttons)
                      creation_buttons.each do |button| %>  
                    <input type="button" class="create-entity-button action-button entity-management-button" value="<%=button[:text]%>" class="<%=button[:class]%>" data-create-url="<%=button[:url]%>"/>
                  <%  end 
                     end %>
                <%% } %>
             </div>
        </div>
     
     </form>
     
</script>

<%= element_form_extension %>
<%= element_action_extension %>

<script type="text/javascript">

// jquery
// tabs => jquery.ui

require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks", "YSDRemoteDataSource", "YSDHierachyListAdapter", "YSDSelectHierarchicalSelector","postPublishing", "jquery.ui", "YSDjson2"], function($, EntityManagement, EntityManagementComplementHooks, YSDRemoteDataSource, YSDHierachyListAdapter, YSDSelectHierarchicalSelector, postPublishing) {
  	
  var contentsHook = {
 	   
 	  entity: null,
    publishingStates: JSON.parse('<%=publishing_states%>'),
    publishingActions: JSON.parse('<%=publishing_actions%>'),   
 	   
    entityKey : function(entity) {
      return entity.key;
    },

    onEdit : function(entity) {
      this.entity = entity;
      $('#title').focus();
      this.configForm(); 
      this.buildCategories(entity.type); 	              
    },
  
    onNew : function() {
      this.entity = null;
  	  $('#title').focus();
  	  this.configForm();
  	  this.buildCategories('<%=content_type%>');
    },
    
    onCreate: function(data) { /* onCreate hook */
      
      var publishingAction  = this.publishingActions[data.publishing_state];
      
      if (publishingAction) {
        var command = postPublishing(publishingAction.action, publishingAction.url_prefix + data.key);
        if (command) {
          command.execute();
        }
      }

    },

    onRenderEntities : function(entities) {
    
      $('.new-entity-button').hide();
      $('.edit-entity-button').hide();
      $('.page-navigation').hide();
      	
    },    
    
  	adaptFormData : function(data) {
  	
  	  var send = {};
  	  
  	  for (idx in data) {
  	    if (idx != 'categories_info') {
  	      send[idx] = data[idx]	
  	    }
  	  }
  	  
  	  var categories = [];  	  
  	  for (idx in data.categories_by_taxonomy) {
  	    var category = data.categories_by_taxonomy[idx];
  	    for (idx_category in category) {
  	      category[idx_category] = new Number(category[idx_category]).valueOf();	
  	      categories.push(category[idx_category]);   	
  	    }  	    	
  	  }
  	  
  	  send.categories = categories;

  	  return send;
  		
  	},
    
    /* ------- Internal function --------- */
    
    configForm : function() {
      $('.top-navigation-bar').hide();

      $('#tabs_above').tabs().addClass( "ui-tabs-vertical ui-helper-clearfix" );
      $('#tabs_above li').removeClass( "ui-corner-top" ).addClass( "ui-corner-left" );

      $('#tabs').tabs();

      if ($('#tabs_above ul').children().length) {
        $('#tabs_above').show();
      }

      if ($('#tabs ul').children().length) {
        $('#show_tabs').show();
        $('#show_tabs').toggle(function() {
           $('#tabs').show();
        }, function() {
           $('#tabs').hide();
        });
      }
      
    },
  	  
  	buildCategories : function(contentType) {
  	
      var taxonomies = document.getElementById('taxonomies');
      while (taxonomies.hasChildNodes())
      {
  	    taxonomies.removeChild(taxonomies.firstChild);	
      }
  	
	    var self = this;
  	  
  	  $.getJSON('/taxonomy-content-type/'+contentType,
  	        function success_handler(data) {
  	          if (data.length == 0) {
  	            $('#content_taxonomies').hide();	
  	          }
  	          else {
  	            for (idx in data) {
  	              self.buildCategory(data[idx].taxonomy_id);       	
  	            }
  	          	$('#content_taxonomies').show();
  	          }	
  	        });  		
  	},
  	
  	buildCategory : function(taxonomy_id) {
  	  
  	  var selectName = 'categories_by_taxonomy['+taxonomy_id+'][]';      
      var container = document.getElementById('taxonomies');
      
      var select = document.createElement('select');
      select.setAttribute('id',selectName);
      select.setAttribute('name', selectName);
      select.setAttribute('class', 'fieldcontrol');
      select.setAttribute('size', 10);
      select.setAttribute('multiple', true);
      container.appendChild(select);
      
      var dataSource = new YSDRemoteDataSource('/terms/'+taxonomy_id,null,[YSDHierachyListAdapter]);
      var value = null;
      if (this.entity && this.entity.categories_by_taxonomy && this.entity.categories_by_taxonomy[taxonomy_id]) {
        value = this.entity.categories_by_taxonomy[taxonomy_id]; 
      }
      var termsSelect = new YSDSelectHierarchicalSelector(selectName, dataSource, value, true);
  	  
  	},
  	
  	formatCategories : function(entity) {
  	    	
      var categories = [];
      for (index in entity.categories_info) { 
         categories.push('<span class="category">'+entity.categories_info[index].description+'</span>');
      }	    	
      
      return categories;	
  		
  	},

    formatPublishingState: function(entity) {
     
      var text='';
      if (entity) {
        text= this.publishingStates[entity.publishing_state];
      }

      return text;

    }

  };

  var urls = { query_url  : '/contents',
    	         create_url : '/content',
  	           update_url : '/content',
  	           delete_url : '/content',
  	           get_url    : '/content'
  	         };
  
  var hooks = [contentsHook];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
     	           
  var contentsManager = new EntityManagement(urls, 'content', <%=settings.contents_page_size%>, hooks,
                                             {url_base: '<%= url_base %>', action: '<%= action %>', id: '<%= id %>', hold_form_after_action: ('<%=action%>' == 'edit')});
  
});
  
</script>
