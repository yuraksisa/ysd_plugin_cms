<%= partial('insert_picture.js'.to_sym) %>

require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks", "YSDRemoteDataSource", "YSDHierachyListAdapter", "YSDSelectHierarchicalSelector","postPublishing", "jquery.ui", "YSDjson2"], function($, EntityManagement, EntityManagementComplementHooks, YSDRemoteDataSource, YSDHierachyListAdapter, YSDSelectHierarchicalSelector, postPublishing) {
  	
  var contentsHook = {
 	   
 	  entity: null,
    publishingStates: JSON.parse('<%=publishing_states%>'),
    publishingActions: JSON.parse('<%=publishing_actions%>'),   
 	   
    entityKey : function(entity) {
      return entity.key;
    },

    onEdit : function(entity) {
      this.entity = entity;
      $('#title').focus();
      this.configForm(); 
      this.buildCategories(entity.type); 	          
    },

    insertPhoto: function(img,attrs) {
      $('#body').wysiwyg('focus');
      $('#body').wysiwyg('insertImage', img, attrs);
    },
  
    onNew : function() {
      this.entity = null;
  	  $('#title').focus();
  	  this.configForm();
  	  this.buildCategories('<%=content_type%>');
    },
    
    onCreate: function(data) { /* onCreate hook */
      
      var publishingAction  = this.publishingActions[data.publishing_state_id];
      
      if (publishingAction) {
        var command = postPublishing(publishingAction.action, publishingAction.url_prefix + data.id);
        if (command) {
          command.execute();
        }
      }

    },

    onRenderEntities : function(entities) {
    
      $('.new-entity-button').hide();
      $('.edit-entity-button').hide();
      $('.page-navigation').hide();
      	
    },    
    
  	adaptFormData : function(data) {
  	
  	  var send = {};

      send.categories = [];
      
      if (data.categories_by_taxonomy) {
        for (idx in data.categories_by_taxonomy) {
          var category = data.categories_by_taxonomy[idx];
          for (var idx_category=0; idx_category < category.length; idx_category++) {
            category[idx_category] = new Number(category[idx_category]).valueOf();  
            send.categories.push({'id':category[idx_category]});     
          }         
        }
      }

  	  for (idx in data) {
  	    if (idx != 'categories_by_taxonomy' && idx != 'translated_categories' && idx != 'type') {
  	      send[idx] = data[idx]	
  	    }
        if (idx == 'type') {
          send['content_type'] = {'id':data[idx]};
        }
  	  }
  	  
  	  return send;
  		
  	},
    
    /* ------- Internal function --------- */
    
    configForm : function() {
      //$('.top-navigation-bar').hide();
      // Integration with insert picture
      insertPictureModel.insertPictureDelegate = this;
      insertPictureView.init();          
    },
  	  
  	buildCategories : function(contentType) {
  	
      var taxonomies = document.getElementById('taxonomies');
      while (taxonomies.hasChildNodes())
      {
  	    taxonomies.removeChild(taxonomies.firstChild);	
      }
  	
	    var self = this;
  	  
  	  $.getJSON('/api/taxonomy-content-type/'+contentType,
  	        function success_handler(data) {
  	          if (data.length == 0) {
  	            $('#content_taxonomies').hide();	
  	          }
  	          else {
  	            for (idx in data) {
  	              self.buildCategory(data[idx].taxonomy_id);       	
  	            }
  	          	$('#content_taxonomies').show();
  	          }	
  	        });  		
  	},
  	
  	buildCategory : function(taxonomy_id) {
  	  
  	  var selectName = 'categories_by_taxonomy['+taxonomy_id+'][]';      
      var container = document.getElementById('taxonomies');
      
      var select = document.createElement('select');
      select.setAttribute('id',selectName);
      select.setAttribute('name', selectName);
      select.setAttribute('class', 'fieldcontrol');
      select.setAttribute('size', 10);
      select.setAttribute('multiple', true);
      select.style.height = '200px';
      container.appendChild(select);
      
      var dataSource = new YSDRemoteDataSource('/api/terms/'+taxonomy_id,null,[YSDHierachyListAdapter]);
      var value = null;
      if (this.entity && this.entity.categories_by_taxonomy && this.entity.categories_by_taxonomy[taxonomy_id]) {
        value = this.entity.categories_by_taxonomy[taxonomy_id]; 
      }
      var termsSelect = new YSDSelectHierarchicalSelector(selectName, dataSource, value, true);
  	  
  	},

    formatPublishingState: function(entity) {
     
      var text='';
      if (entity) {
        text= this.publishingStates[entity.publishing_state_id];
      }

      return text;

    }


  };

  var urls = { query_url  : '/api/contents',
    	         create_url : '/api/content',
  	           update_url : '/api/content',
  	           delete_url : '/api/content',
  	           get_url    : '/api/content'
  	         };
  
  var hooks = [contentsHook];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
     	           
  var contentsManager = new EntityManagement(urls, 'content', <%=settings.contents_page_size%>, hooks,
    {url_base: '<%= url_base %>', action: '<%= action %>', id: '<%= id %>', 
     hold_form_after_action: ('<%=action%>' == 'edit')});

  
});